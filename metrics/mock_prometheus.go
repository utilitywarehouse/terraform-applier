// Code generated by MockGen. DO NOT EDIT.
// Source: metrics/prometheus.go

// Package metrics is a generated GoMock package.
package metrics

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockPrometheusInterface is a mock of PrometheusInterface interface
type MockPrometheusInterface struct {
	ctrl     *gomock.Controller
	recorder *MockPrometheusInterfaceMockRecorder
}

// MockPrometheusInterfaceMockRecorder is the mock recorder for MockPrometheusInterface
type MockPrometheusInterfaceMockRecorder struct {
	mock *MockPrometheusInterface
}

// NewMockPrometheusInterface creates a new mock instance
func NewMockPrometheusInterface(ctrl *gomock.Controller) *MockPrometheusInterface {
	mock := &MockPrometheusInterface{ctrl: ctrl}
	mock.recorder = &MockPrometheusInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockPrometheusInterface) EXPECT() *MockPrometheusInterfaceMockRecorder {
	return m.recorder
}

// UpdateTerraformExitCodeCount mocks base method
func (m *MockPrometheusInterface) UpdateTerraformExitCodeCount(arg0, arg1 string, arg2 int) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "UpdateTerraformExitCodeCount", arg0, arg1, arg2)
}

// UpdateTerraformExitCodeCount indicates an expected call of UpdateTerraformExitCodeCount
func (mr *MockPrometheusInterfaceMockRecorder) UpdateTerraformExitCodeCount(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateTerraformExitCodeCount", reflect.TypeOf((*MockPrometheusInterface)(nil).UpdateTerraformExitCodeCount), arg0, arg1, arg2)
}

// UpdateModuleSuccess mocks base method
func (m *MockPrometheusInterface) UpdateModuleSuccess(arg0 string, arg1 bool) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "UpdateModuleSuccess", arg0, arg1)
}

// UpdateModuleSuccess indicates an expected call of UpdateModuleSuccess
func (mr *MockPrometheusInterfaceMockRecorder) UpdateModuleSuccess(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateModuleSuccess", reflect.TypeOf((*MockPrometheusInterface)(nil).UpdateModuleSuccess), arg0, arg1)
}

// UpdateModuleApplyDuration mocks base method
func (m *MockPrometheusInterface) UpdateModuleApplyDuration(arg0 string, arg1 float64, arg2 bool) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "UpdateModuleApplyDuration", arg0, arg1, arg2)
}

// UpdateModuleApplyDuration indicates an expected call of UpdateModuleApplyDuration
func (mr *MockPrometheusInterfaceMockRecorder) UpdateModuleApplyDuration(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateModuleApplyDuration", reflect.TypeOf((*MockPrometheusInterface)(nil).UpdateModuleApplyDuration), arg0, arg1, arg2)
}
