// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/utilitywarehouse/terraform-applier/sysutil (interfaces: CredsProvider)

// Package sysutil is a generated GoMock package.
package sysutil

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockCredsProvider is a mock of CredsProvider interface.
type MockCredsProvider struct {
	ctrl     *gomock.Controller
	recorder *MockCredsProviderMockRecorder
}

// MockCredsProviderMockRecorder is the mock recorder for MockCredsProvider.
type MockCredsProviderMockRecorder struct {
	mock *MockCredsProvider
}

// NewMockCredsProvider creates a new mock instance.
func NewMockCredsProvider(ctrl *gomock.Controller) *MockCredsProvider {
	mock := &MockCredsProvider{ctrl: ctrl}
	mock.recorder = &MockCredsProviderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCredsProvider) EXPECT() *MockCredsProviderMockRecorder {
	return m.recorder
}

// Creds mocks base method.
func (m *MockCredsProvider) Creds(arg0 context.Context) (string, string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Creds", arg0)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(string)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// Creds indicates an expected call of Creds.
func (mr *MockCredsProviderMockRecorder) Creds(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Creds", reflect.TypeOf((*MockCredsProvider)(nil).Creds), arg0)
}
