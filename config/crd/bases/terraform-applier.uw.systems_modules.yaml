---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.15.0
  name: modules.terraform-applier.uw.systems
spec:
  group: terraform-applier.uw.systems
  names:
    kind: Module
    listKind: ModuleList
    plural: modules
    singular: module
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.schedule
      name: Schedule
      type: string
    - jsonPath: .spec.planOnly
      name: PlanOnly
      type: string
    - jsonPath: .status.currentState
      name: State
      type: string
    - jsonPath: .status.stateReason
      name: Reason
      type: string
    - jsonPath: .status.lastDefaultRunStartedAt
      name: Last Run Started At
      type: string
    - jsonPath: .status.lastAppliedAt
      name: Last Applied At
      type: string
    - jsonPath: .status.lastDefaultRunCommitHash
      name: Commit
      priority: 10
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      priority: 20
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: Module is the Schema for the modules API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: ModuleSpec defines the desired state of Module
            properties:
              backend:
                description: |-
                  List of backend config attributes passed to the Terraform init
                  for terraform backend configuration
                items:
                  description: EnvVar represents an environment variable present in
                    a Container.
                  properties:
                    name:
                      description: Name of the environment variable. Must be a C_IDENTIFIER.
                      type: string
                    value:
                      description: |-
                        Variable references $(VAR_NAME) are expanded
                        using the previously defined environment variables in the container and
                        any service environment variables. If a variable cannot be resolved,
                        the reference in the input string will be unchanged. Double $$ are reduced
                        to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.
                        "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)".
                        Escaped references will never be expanded, regardless of whether the variable
                        exists or not.
                        Defaults to "".
                      type: string
                    valueFrom:
                      description: Source for the environment variable's value. Cannot
                        be used if value is not empty.
                      properties:
                        configMapKeyRef:
                          description: Selects a key of a ConfigMap.
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              default: ""
                              description: |-
                                Name of the referent.
                                This field is effectively required, but due to backwards compatibility is
                                allowed to be empty. Instances of this type with an empty value here are
                                almost certainly wrong.
                                TODO: Add other useful fields. apiVersion, kind, uid?
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.
                              type: string
                            optional:
                              description: Specify whether the ConfigMap or its key
                                must be defined
                              type: boolean
                          required:
                          - key
                          type: object
                          x-kubernetes-map-type: atomic
                        fieldRef:
                          description: |-
                            Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`,
                            spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.
                          properties:
                            apiVersion:
                              description: Version of the schema the FieldPath is
                                written in terms of, defaults to "v1".
                              type: string
                            fieldPath:
                              description: Path of the field to select in the specified
                                API version.
                              type: string
                          required:
                          - fieldPath
                          type: object
                          x-kubernetes-map-type: atomic
                        resourceFieldRef:
                          description: |-
                            Selects a resource of the container: only resources limits and requests
                            (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.
                          properties:
                            containerName:
                              description: 'Container name: required for volumes,
                                optional for env vars'
                              type: string
                            divisor:
                              anyOf:
                              - type: integer
                              - type: string
                              description: Specifies the output format of the exposed
                                resources, defaults to "1"
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            resource:
                              description: 'Required: resource to select'
                              type: string
                          required:
                          - resource
                          type: object
                          x-kubernetes-map-type: atomic
                        secretKeyRef:
                          description: Selects a key of a secret in the pod's namespace
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              default: ""
                              description: |-
                                Name of the referent.
                                This field is effectively required, but due to backwards compatibility is
                                allowed to be empty. Instances of this type with an empty value here are
                                almost certainly wrong.
                                TODO: Add other useful fields. apiVersion, kind, uid?
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                          x-kubernetes-map-type: atomic
                      type: object
                  required:
                  - name
                  type: object
                type: array
              delegateServiceAccountSecretRef:
                default: terraform-applier-delegate-token
                description: |-
                  DelegateServiceAccountSecretRef references a Secret of type
                  kubernetes.io/service-account-token in the same namespace as the Module
                  that will be used to fetch secrets, configmaps from modules' namespace.
                  if vaultRequests are specified, the service account's jwt will be used for vault authentication.
                minLength: 1
                type: string
              env:
                description: List of environment variables passed to the Terraform
                  execution.
                items:
                  description: EnvVar represents an environment variable present in
                    a Container.
                  properties:
                    name:
                      description: Name of the environment variable. Must be a C_IDENTIFIER.
                      type: string
                    value:
                      description: |-
                        Variable references $(VAR_NAME) are expanded
                        using the previously defined environment variables in the container and
                        any service environment variables. If a variable cannot be resolved,
                        the reference in the input string will be unchanged. Double $$ are reduced
                        to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.
                        "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)".
                        Escaped references will never be expanded, regardless of whether the variable
                        exists or not.
                        Defaults to "".
                      type: string
                    valueFrom:
                      description: Source for the environment variable's value. Cannot
                        be used if value is not empty.
                      properties:
                        configMapKeyRef:
                          description: Selects a key of a ConfigMap.
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              default: ""
                              description: |-
                                Name of the referent.
                                This field is effectively required, but due to backwards compatibility is
                                allowed to be empty. Instances of this type with an empty value here are
                                almost certainly wrong.
                                TODO: Add other useful fields. apiVersion, kind, uid?
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.
                              type: string
                            optional:
                              description: Specify whether the ConfigMap or its key
                                must be defined
                              type: boolean
                          required:
                          - key
                          type: object
                          x-kubernetes-map-type: atomic
                        fieldRef:
                          description: |-
                            Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`,
                            spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.
                          properties:
                            apiVersion:
                              description: Version of the schema the FieldPath is
                                written in terms of, defaults to "v1".
                              type: string
                            fieldPath:
                              description: Path of the field to select in the specified
                                API version.
                              type: string
                          required:
                          - fieldPath
                          type: object
                          x-kubernetes-map-type: atomic
                        resourceFieldRef:
                          description: |-
                            Selects a resource of the container: only resources limits and requests
                            (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.
                          properties:
                            containerName:
                              description: 'Container name: required for volumes,
                                optional for env vars'
                              type: string
                            divisor:
                              anyOf:
                              - type: integer
                              - type: string
                              description: Specifies the output format of the exposed
                                resources, defaults to "1"
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            resource:
                              description: 'Required: resource to select'
                              type: string
                          required:
                          - resource
                          type: object
                          x-kubernetes-map-type: atomic
                        secretKeyRef:
                          description: Selects a key of a secret in the pod's namespace
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              default: ""
                              description: |-
                                Name of the referent.
                                This field is effectively required, but due to backwards compatibility is
                                allowed to be empty. Instances of this type with an empty value here are
                                almost certainly wrong.
                                TODO: Add other useful fields. apiVersion, kind, uid?
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                          x-kubernetes-map-type: atomic
                      type: object
                  required:
                  - name
                  type: object
                type: array
              path:
                description: Path to the directory containing Terraform Root Module
                  (.tf) files.
                type: string
              planOnPR:
                default: true
                description: if PlanOnPR is true, plan-on-pr feature will be enabled
                  for this module
                type: boolean
              planOnly:
                type: boolean
              pollInterval:
                default: 60
                description: PollInterval specifies the interval at which the Git
                  repository must be checked.
                minimum: 60
                type: integer
              rbac:
                description: List of roles and subjects assigned to that role for
                  the module.
                items:
                  properties:
                    role:
                      description: Name of the role. Allowed value at the moment is
                        just "Admin"
                      enum:
                      - Admin
                      type: string
                    subjects:
                      description: Subjects holds references to the objects the role
                        applies to.
                      items:
                        properties:
                          kind:
                            description: Kind of object being referenced. Allowed
                              values are "User" & "Group"
                            enum:
                            - User
                            - Group
                            type: string
                          name:
                            description: Name of the object being referenced. For
                              "User" kind value should be email
                            type: string
                        type: object
                      type: array
                  type: object
                type: array
              repoName:
                description: |-
                  Name of the repository containing Terraform module directory.
                  Deprecated will be removed in next version
                type: string
              repoRef:
                default: HEAD
                description: |-
                  The RepoRef specifies the revision of the repository for the module source code.
                  this can be tag or branch. If not specified, this defaults to "HEAD" (repo's default branch)
                type: string
              repoURL:
                description: URL to the repository containing Terraform module source
                  code.
                type: string
              runTimeout:
                default: 900
                description: RunTimeout specifies the timeout in sec for performing
                  a complete TF run (init,plan and apply if required).
                maximum: 1800
                type: integer
              schedule:
                description: |-
                  The schedule in Cron format. Module will do periodic run for a given schedule
                  if no schedule provided then module will only run if new PRs are added to given module path
                type: string
              var:
                description: List of input variables passed to the Terraform execution.
                items:
                  description: EnvVar represents an environment variable present in
                    a Container.
                  properties:
                    name:
                      description: Name of the environment variable. Must be a C_IDENTIFIER.
                      type: string
                    value:
                      description: |-
                        Variable references $(VAR_NAME) are expanded
                        using the previously defined environment variables in the container and
                        any service environment variables. If a variable cannot be resolved,
                        the reference in the input string will be unchanged. Double $$ are reduced
                        to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.
                        "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)".
                        Escaped references will never be expanded, regardless of whether the variable
                        exists or not.
                        Defaults to "".
                      type: string
                    valueFrom:
                      description: Source for the environment variable's value. Cannot
                        be used if value is not empty.
                      properties:
                        configMapKeyRef:
                          description: Selects a key of a ConfigMap.
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              default: ""
                              description: |-
                                Name of the referent.
                                This field is effectively required, but due to backwards compatibility is
                                allowed to be empty. Instances of this type with an empty value here are
                                almost certainly wrong.
                                TODO: Add other useful fields. apiVersion, kind, uid?
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.
                              type: string
                            optional:
                              description: Specify whether the ConfigMap or its key
                                must be defined
                              type: boolean
                          required:
                          - key
                          type: object
                          x-kubernetes-map-type: atomic
                        fieldRef:
                          description: |-
                            Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`,
                            spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.
                          properties:
                            apiVersion:
                              description: Version of the schema the FieldPath is
                                written in terms of, defaults to "v1".
                              type: string
                            fieldPath:
                              description: Path of the field to select in the specified
                                API version.
                              type: string
                          required:
                          - fieldPath
                          type: object
                          x-kubernetes-map-type: atomic
                        resourceFieldRef:
                          description: |-
                            Selects a resource of the container: only resources limits and requests
                            (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.
                          properties:
                            containerName:
                              description: 'Container name: required for volumes,
                                optional for env vars'
                              type: string
                            divisor:
                              anyOf:
                              - type: integer
                              - type: string
                              description: Specifies the output format of the exposed
                                resources, defaults to "1"
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            resource:
                              description: 'Required: resource to select'
                              type: string
                          required:
                          - resource
                          type: object
                          x-kubernetes-map-type: atomic
                        secretKeyRef:
                          description: Selects a key of a secret in the pod's namespace
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              default: ""
                              description: |-
                                Name of the referent.
                                This field is effectively required, but due to backwards compatibility is
                                allowed to be empty. Instances of this type with an empty value here are
                                almost certainly wrong.
                                TODO: Add other useful fields. apiVersion, kind, uid?
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                          x-kubernetes-map-type: atomic
                      type: object
                  required:
                  - name
                  type: object
                type: array
              vaultRequests:
                description: |-
                  VaultRequests specifies credential generate requests from the vault
                  configured on the controller
                properties:
                  aws:
                    description: |-
                      aws specifies vault credential generation request for AWS secrets engine
                      If specified, controller will request AWS creds from vault and set
                      AWS_ACCESS_KEY_ID, AWS_SECRET_ACCESS_KEY and AWS_SESSION_TOKEN envs during
                      terraform run.
                      'VAULT_AWS_ENG_PATH' env set on controller will be used as credential path
                    properties:
                      credentialType:
                        default: assumed_role
                        description: |-
                          CredentialType specifies the type of credential to be used when retrieving credentials from the role.
                          Must be one of iam_user, assumed_role, or federation_token.
                        enum:
                        - iam_user
                        - assumed_role
                        - federation_token
                        type: string
                      roleARN:
                        description: |-
                          The ARN of the role to assume if credential_type on the Vault role is assumed_role.
                          Optional if the Vault role only allows a single AWS role ARN.
                        type: string
                      vaultRole:
                        description: VaultRole Specifies the name of the vault role
                          to generate credentials against.
                        type: string
                    type: object
                type: object
            required:
            - path
            type: object
          status:
            description: ModuleStatus defines the observed state of Module
            properties:
              currentState:
                description: |-
                  CurrentState denotes current overall status of module run
                  it will be either
                  'Running' -> Module is in running state
                  'OK' -> last run finished successfully and no drift detected
                  'Drift_Detected' -> last run finished successfully and drift detected
                  'Errored' -> last run finished with Error
                type: string
              lastAppliedAt:
                description: Information when was the last time the module was successfully
                  applied.
                format: date-time
                type: string
              lastAppliedCommitHash:
                description: LastAppliedCommitHash is the hash of git commit of last
                  successful apply.
                type: string
              lastDefaultRunCommitHash:
                description: |-
                  LastDefaultRunCommitHash is the hash of git commit of last run.
                  Default Runs are runs happens on default repo ref set by user.
                  This field used in Reconcile loop
                type: string
              lastDefaultRunStartedAt:
                description: |-
                  LastDefaultRunStartedAt when was the last time the run was started.
                  Default Runs are runs happens on default repo ref set by user.
                  This field used in Reconcile loop
                format: date-time
                type: string
              observedGeneration:
                description: ObservedGeneration is the last reconciled generation.
                format: int64
                type: integer
              runCommitHash:
                description: |-
                  RunCommitHash is the hash of git commit of last run.
                  Deprecated will be removed in next version
                type: string
              runStartedAt:
                description: |-
                  Information when was the last time the run was started.
                  Deprecated will be removed in next version
                format: date-time
                type: string
              runType:
                description: LastRunType is a short description of the kind of terraform
                  run that was attempted.
                type: string
              stateReason:
                description: StateReason is potential reason associated with current
                  state.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
