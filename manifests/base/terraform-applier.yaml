apiVersion: v1
kind: ServiceAccount
metadata:
  name: terraform-applier
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: terraform-applier
rules:
  # Used by terraform-applier to store state in secrets, leases are used to
  # perform locking
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get", "create", "update", "patch", "list"]
  - apiGroups: ["coordination.k8s.io"]
    resources: ["leases"]
    verbs: ["get", "create", "update", "patch", "list"]
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: terraform-applier
roleRef:
  kind: Role
  name: terraform-applier
  apiGroup: rbac.authorization.k8s.io
subjects:
  - kind: ServiceAccount
    name: terraform-applier
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/path: /__/metrics
    prometheus.io/port: "8080"
  name: terraform-applier
  labels:
    app: terraform-applier
spec:
  ports:
    - name: web
      protocol: TCP
      port: 80
      targetPort: 8080
  selector:
    app: terraform-applier
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: terraform-applier
spec:
  replicas: 1
  selector:
    matchLabels:
      app: terraform-applier
  serviceName: terraform-applier
  template:
    metadata:
      labels:
        app: terraform-applier
    spec:
      serviceAccountName: terraform-applier
      containers:
        - name: terraform-applier
          image: quay.io/utilitywarehouse/terraform-applier:v0.5.5-RC1
          resources:
            requests:
              cpu: 10m
              memory: 25Mi
            limits:
              cpu: 500m
              memory: 200Mi
          ports:
            - containerPort: 8080
          env:
            - name: MODULES_PATH
              value: /src
